<?xml version="1.0" encoding="UTF-8"?>
<sqlcfg>
	<report>
		<LogOnTimes>
			<main>
				<subjectReport>
				<![CDATA[
				select sum(tmp.times_per_quantum) as times,CONVERT(VARCHAR(10), tmp.logon_time, 23) as logon_time,tmp.quantum as time_quantum from( 
				select count(*) as times_per_quantum,lg.logon_time,CONVERT(VARCHAR(10),lg.logon_time) as ontime_day,DATEPART(HOUR, lg.logon_time)as ontime_hour,                          
				case DATEPART(HOUR, lg.logon_time)                                                                   
				when 0  then 0                                                                          
				when 1  then 0                                                                          
				when 2  then 2                                                                          
				when 3  then 2                                                                          
				when 4  then 4                                                                          
				when 5  then 4                                                                          
				when 6  then 6                                                                          
				when 7  then 6                                                                          
				when 8  then 8                                                                          
				when 9  then 8                                                                          
				when 10  then 10                                                                        
				when 11  then 10                                                                        
				when 12  then 12                                                                        
				when 13  then 12                                                                        
				when 14  then 14                                                                        
				when 15  then 14                                                                        
				when 16  then 16                                                                        
				when 17  then 16                                                                        
				when 18  then 18                                                                        
				when 19  then 18                                                                        
				when 20  then 20                                                                        
				when 21  then 20                                                                        
				when 22  then 22                                                                        
				when 23  then 22                                                                        
				else -1                                                                                 
				end as quantum                                                                          
				FROM logon_log lg left join org_member mem on mem.id=lg.member_id                                                                        
				where DATEDIFF(DAY, lg.logon_time, :time)= 0 and mem.status=1 and mem.is_admin=0 and mem.is_internal=1                                                        
				group by CONVERT(VARCHAR(10), lg.logon_time, 23),DATEPART(HOUR, lg.logon_time) ,lg.logon_time                                             
				) tmp                                                                                   
				group by CONVERT(VARCHAR(10), tmp.logon_time, 23),tmp.quantum            
				]]>
				</subjectReport>
			</main>
		</LogOnTimes>
		<LogOnPersonNum>
			<main>
				<subjectReport>
				<![CDATA[
				select a.logontime as '日期',count(*)as '登录人数' from(                     
				select distinct mem.id, CONVERT(VARCHAR(10), lg.logon_time, 23) as logontime 
				from logon_log lg left join org_member mem on mem.id=lg.member_id           
				where mem.status=1 and mem.is_admin=0 and mem.is_internal=1  and lg.logon_time>=:start_day and CONVERT(VARCHAR(100),lg.logon_time,20)<=:end_day ) a                    
				group by a.logontime order by a.logontime            
				]]>
				</subjectReport>
			</main>
		</LogOnPersonNum>
		<OnlinePeakByMonth>
			<main>
				<![CDATA[
				select max(peak_value) as max_peak,CONVERT(VARCHAR(10), record_date,23) as record_date from rpt_online_peak 
				where CONVERT(VARCHAR(100),record_date,20)>=:start_day and CONVERT(VARCHAR(100),record_date,20)<=:end_day      
				group by CONVERT(VARCHAR(10), record_date,23) order by record_date
				]]>
			</main>
		</OnlinePeakByMonth>
		<LogOutTimes>
			<main>
				<subjectReport>
				<![CDATA[
				select sum(tmp.times_per_quantum) as times,CONVERT(VARCHAR(10), tmp.logout_time, 23)as logout_time,tmp.quantum as time_quantum 
                from( 
				select count(*) as times_per_quantum,lg.logon_time,lg.logout_time,CONVERT(VARCHAR(10), lg.logout_time, 23) as outtime_day ,DATEPART(HOUR, lg.logout_time) as outtime_hour,                           
				case DATEPART(HOUR, lg.logout_time)                                                                   
				when 0  then 0                                                                          
				when 1  then 0                                                                          
				when 2  then 2                                                                          
				when 3  then 2                                                                          
				when 4  then 4                                                                          
				when 5  then 4                                                                          
				when 6  then 6                                                                          
				when 7  then 6                                                                          
				when 8  then 8                                                                          
				when 9  then 8                                                                          
				when 10  then 10                                                                        
				when 11  then 10                                                                        
				when 12  then 12                                                                        
				when 13  then 12                                                                        
				when 14  then 14                                                                        
				when 15  then 14                                                                        
				when 16  then 16                                                                        
				when 17  then 16                                                                        
				when 18  then 18                                                                        
				when 19  then 18                                                                        
				when 20  then 20                                                                        
				when 21  then 20                                                                        
				when 22  then 22                                                                        
				when 23  then 22                                                                        
				else -1                                                                                 
				end as quantum                                                                          
				FROM logon_log lg left join org_member mem on mem.id=lg.member_id                                                                          
				where DATEDIFF(DAY, lg.logout_time, :time)= 0 and mem.status=1 and mem.is_admin=0 and mem.is_internal=1                                                          
				group by CONVERT(VARCHAR(10), lg.logout_time, 23),DATEPART(HOUR, lg.logout_time) ,lg.logon_time,lg.logout_time                                             
				) tmp                                                                                   
				group by CONVERT(VARCHAR(10), tmp.logout_time, 23),tmp.quantum                   
				]]>
				</subjectReport>
			</main>
		</LogOutTimes>
		<OnlineStatistics>
			<main>
				<subjectReport>
				<![CDATA[
				select CONVERT(VARCHAR(10), rpt_online_peak."RECORD_DATE",23), rpt_online_peak."TIME_QUANTUM", max(rpt_online_peak."PEAK_VALUE") as PEAK_VALUE from rpt_online_peak 
				where DATEDIFF(DAY, record_date, :time)= 0  	  
				group by CONVERT(VARCHAR(10), rpt_online_peak."RECORD_DATE",23), rpt_online_peak."TIME_QUANTUM"  
				]]>
				</subjectReport>
			</main>
		</OnlineStatistics>
		<OnlineTimeStatistics>
			<main>
				<![CDATA[
					select mem.name as '人员',unit.name as '部门',a.ontime as '登录时间',a.outtime as '退出时间',a.online as '时长(小时)',
					0 as '部门平均时长(小时)',case a.logon_type when 0 then 'PC' else '移动端' end as '登录方式',a.ip_address as '登录IP' from
					(select log.member_id,
					(case when datediff(day,log.logon_time,log.logout_time)>0 then datediff(minute,log.logon_time,CONVERT(VARCHAR(10),dateadd(d,1,log.logon_time),23) ) 
					when datediff(day,log.logon_time,log.logout_time)=0 and CONVERT(VARCHAR(22),log.logon_time,120) >=(case when :loginDate='' then log.logon_time else :loginDate end) then datediff(minute,log.logon_time,:nowDate ) 
					else log.online_time                                                                                                           
					end) as online,                                                                                                                
					CONVERT(VARCHAR(19),log.logon_time,25) as ontime,                                                                                                      
					case when datediff(day,log.logon_time,log.logout_time)>0 or log.logon_time = log.logout_time then '-'                                                                 
					else CONVERT(VARCHAR(19),log.logout_time,25)                                                                                                           
					end as outtime,                                                                                                                
					log.logon_type,log.ip_address ,
					log.LOGON_TIME as logonTime                                                                                                 
					from logon_log log                                                                                                             
					where log.member_id=(:user_id) and                                                                                                 
					CONVERT(VARCHAR(10),log.logon_time,23) >= :start_time and CONVERT(VARCHAR(10),log.logon_time,23) <= :end_time                
					                                                                                                                               
					union                                                                                                                          
					                                                                                                                               
					select log.member_id, datediff(minute,CONVERT(VARCHAR(10),log.logout_time,23),log.logout_time) as online,                                   
					case when datediff(day,log.logon_time,log.logout_time)>0 then '-'                                                                  
					else CONVERT(VARCHAR(19),log.logon_time,25)                                                                                                            
					end as ontime,                                                                                                             
					CONVERT(VARCHAR(19),log.logout_time,25) as outtime,
					log.logon_type,log.ip_address,
					log.LOGON_TIME as logonTime                                                                                  
					from logon_log log                                                                                                             
					where datediff(day,log.logon_time,log.logout_time)>0 and log.member_id=(:user_id) and 											
					CONVERT(VARCHAR(10),log.logon_time,23) >= :start_time and CONVERT(VARCHAR(10),log.logon_time,23) <= :end_time and CONVERT(VARCHAR(10),log.logout_time,23) <= :end_time   
					                                                                                                                           
					union                                                                                                                          
					                                                                                                                               
					select log.member_id, datediff(minute,CONVERT(VARCHAR(10),log.logout_time,23),log.logout_time) as online,                                   
					case when datediff(day,log.logon_time,log.logout_time)>0 then '-'                                                                  
					else CONVERT(VARCHAR(19),log.logon_time,25)                                                                                                            
					end as ontime,                                                                                                             
					CONVERT(VARCHAR(19),log.logout_time,25) as outtime,
					log.logon_type,log.ip_address,
					log.LOGON_TIME as logonTime                                                                                  
					from logon_log log                                                                                                             
					where datediff(day,log.logon_time,log.logout_time)>0 and log.member_id=(:user_id) and 											
					CONVERT(VARCHAR(10),log.logout_time,23) >= :start_time and CONVERT(VARCHAR(10),log.logout_time,23) <= :end_time and CONVERT(VARCHAR(10),log.logon_time,23) <= :start_time 
					) a                                                                           											
					left join org_member mem on a.member_id=mem.id left join org_unit unit on unit.id=mem.org_department_id                        
					order by a.logonTime,a.outtime
				]]>
			</main>
			<depAverage>
				<![CDATA[
				SELECT
					sum(r.TOTAL) as total,
					r.DEPARTMENT_ID as department_id,
					r.QUERY_TIME as query_time,
					max(r.NAME) as name
				from (
					select sum((case when datediff(day,lg.logon_time,lg.logout_time)>0 then datediff(minute,lg.logon_time,CONVERT(VARCHAR(10),dateadd(d,1,lg.logon_time),23) ) 	  
					else lg.online_time end)) as total,																									 
					u.id as department_id,u.name,CONVERT(VARCHAR(10),lg.logon_time,23) as query_time																								
					from logon_log lg left join org_member mem on mem.id=lg.member_id  																		
					left join org_unit u on u.id=mem.org_department_id                 																		
					where 
					u.id is not null and
					CONVERT(VARCHAR(100),lg.logon_time,20) > :start_time and CONVERT(VARCHAR(100),lg.logon_time,20) <= :end_time                                                                                                                      					
					group by u.id,u.name,CONVERT(VARCHAR(10),lg.logon_time,23)
					union
					select sum(
					datediff(minute,CONVERT(VARCHAR(10),lg.logout_time,23),lg.logout_time ) 	  
					) as total,																									 
					u.id as department_id,u.name,CONVERT(VARCHAR(10),lg.logout_time,23) as query_time																								
					from logon_log lg left join org_member mem on mem.id=lg.member_id  																		
					left join org_unit u on u.id=mem.org_department_id                 																		
					where 
					u.id is not null and datediff(day,lg.logon_time,lg.logout_time)>0 and
					CONVERT(VARCHAR(100),lg.logout_time,20) > :start_time and CONVERT(VARCHAR(100),lg.logout_time,20) <= :end_time                                                                                                                      					
					group by u.id,u.name,CONVERT(VARCHAR(10),lg.logout_time,23)
				) r 
				GROUP BY
					r.DEPARTMENT_ID,
					r.QUERY_TIME
				]]>
			</depAverage>
			<rptOnlineTime>
				<![CDATA[
				select DEPARTMENT_ID, QUERY_TIME, AVERAGE from RPT_ONLINE_TIME 
				where DEPARTMENT_ID=:dep_id and 
				( case 
				when 0=:time and CONVERT(VARCHAR(10),QUERY_TIME,23) >= :start_time and CONVERT(VARCHAR(10),QUERY_TIME,23) < :end_time then 1   										 
				when (1=:time or 2=:time or 4=:time or 5=:time) and CONVERT(VARCHAR(10),QUERY_TIME,23) >= :start_time and CONVERT(VARCHAR(10),QUERY_TIME,23) <= :end_time then 1
				else 0 
				end ) =1
				]]>
			</rptOnlineTime>
		</OnlineTimeStatistics>
	</report>
</sqlcfg>