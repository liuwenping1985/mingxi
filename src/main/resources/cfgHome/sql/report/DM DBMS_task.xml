<?xml version="1.0" encoding="UTF-8"?>
<sqlcfg>
	<report>
		<EventStatistics>
			<main>
				<matterReport>
				<![CDATA[
				SELECT 
					:name AS "人员",
					:departmentName AS "部门",
					TO_CHAR(b.query_time,'yyyy-mm-dd') AS "日期",
					(CASE WHEN a.plans IS NULL THEN 0 ELSE a.plans END) AS "计划",
					(CASE WHEN a.tasks IS NULL THEN 0 ELSE a.tasks END) AS "任务",
					(CASE WHEN a.events IS NULL THEN 0 ELSE a.events END) AS "事件",
					(CASE WHEN a.meetings IS NULL THEN 0 ELSE a.meetings END) AS "会议",
					(CASE WHEN a.total IS NULL THEN 0 ELSE a.total END) AS "合计",
					round(b.total/CAST(:departmentNum AS NUMBER),2) AS "平均值",
					:user_id AS member_id
				FROM
				(
					(select SUM(a.plans) as plans,SUM(a.tasks) as tasks,
					SUM(a.events) as events,SUM(a.meetings) as meetings,
					SUM(a.total) as total,a.QUERY_TIME as QUERY_TIME
					from RPT_MATTER_REPORT a 
					WHERE a.USER_id = :user_id
					AND a.QUERY_TIME>=to_date(:startTime,'yyyy-mm-dd hh24:mi:ss') 
					AND a.QUERY_TIME<to_date(:endTime,'yyyy-mm-dd hh24:mi:ss')
					GROUP BY a.QUERY_TIME
					) a
					RIGHT JOIN
					(select SUM(a.TOTAL) AS total,a.query_time AS QUERY_TIME
					from RPT_MATTER_REPORT a 
					WHERE a.DEPARTMENT_ID=:departmentId
					AND a.QUERY_TIME>=to_date(:startTime,'yyyy-mm-dd hh24:mi:ss') 
					AND a.QUERY_TIME<to_date(:endTime,'yyyy-mm-dd hh24:mi:ss')
					GROUP BY a.query_time,a.DEPARTMENT_ID
					) b
					ON a.query_time = b.query_time
				)
				ORDER BY b.QUERY_TIME ASC
				]]>
				</matterReport>
				<matterReport-group>
				<![CDATA[
				SELECT 
					m.name AS "人员",
					m.depName AS "部门",
					:displayTime AS "日期",
					(CASE WHEN a.plans IS NULL THEN 0 ELSE a.plans END) AS "计划",
					(CASE WHEN a.tasks IS NULL THEN 0 ELSE a.tasks END) AS "任务",
					(CASE WHEN a.events IS NULL THEN 0 ELSE a.events END) AS "事件",
					(CASE WHEN a.meetings IS NULL THEN 0 ELSE a.meetings END) AS "会议",
					(CASE WHEN a.total IS NULL THEN 0 ELSE a.total END) AS "合计",
					(CASE WHEN b.total IS NULL THEN 0 ELSE round(b.total/CAST(c.departmentNum AS NUMBER),2) END) AS "部门平均值",
					m.member_id AS member_id
				FROM
				(
					(SELECT m.NAME AS NAME,m.id AS member_id,m.ORG_DEPARTMENT_ID AS ORG_DEPARTMENT_ID,u.NAME AS depName 
					FROM org_member m INNER JOIN org_unit u ON m.ORG_DEPARTMENT_ID=u.ID
					WHERE m.ID in (:user_id)
					) m left JOIN
					(select SUM(a.plans) as plans,SUM(a.tasks) as tasks,
					SUM(a.events) as events,SUM(a.meetings) as meetings,
					SUM(a.total) as total,a.USER_id as USER_id
					from RPT_MATTER_REPORT a 
					WHERE a.USER_id in (:user_id)
					AND a.QUERY_TIME>=to_date(:startTime,'yyyy-mm-dd hh24:mi:ss') 
					AND a.QUERY_TIME<to_date(:endTime,'yyyy-mm-dd hh24:mi:ss')
					group by a.USER_id
					) a ON m.member_id=a.USER_id
					left JOIN
					(select SUM(a.TOTAL) AS total,a.DEPARTMENT_ID AS DEPARTMENT_ID
					from RPT_MATTER_REPORT a
					WHERE a.DEPARTMENT_ID in (SELECT ORG_DEPARTMENT_ID FROM org_member WHERE id IN (:user_id))
					AND a.QUERY_TIME>=to_date(:startTime,'yyyy-mm-dd hh24:mi:ss') 
					AND a.QUERY_TIME<to_date(:endTime,'yyyy-mm-dd hh24:mi:ss')
					group by a.DEPARTMENT_ID
					) b
					ON m.ORG_DEPARTMENT_ID=b.DEPARTMENT_ID
					left join
					(
					select count(*) as departmentNum,ORG_DEPARTMENT_ID as DEPARTMENT_ID
					from org_member m
					 WHERE m.ORG_DEPARTMENT_ID in (SELECT ORG_DEPARTMENT_ID FROM org_member WHERE id IN (:user_id))
					 AND m.IS_DELETED = 0
					 AND m.IS_ENABLE = 1
					 AND m.IS_ADMIN = 0
					 AND m.IS_ASSIGNED = 1
					 AND m.IS_VIRTUAL = 0
					 AND m.IS_LOGINABLE = 1
					 AND m.IS_INTERNAL = 1
					 group by m.ORG_DEPARTMENT_ID
					) c
					ON m.ORG_DEPARTMENT_ID=c.DEPARTMENT_ID
				)
				ORDER BY "合计"
				]]>
				</matterReport-group>
				<matterReport2>
				<![CDATA[
				SELECT
				m.name AS "人员",
				m.depName AS "部门",
				:startTime AS "日期",
				(CASE WHEN a.numbers IS NULL THEN 0 ELSE a.numbers END) AS "计划",
				(CASE WHEN b.numbers IS NULL THEN 0 ELSE b.numbers END) AS "任务",
				(CASE WHEN c.numbers IS NULL THEN 0 ELSE c.numbers END) AS "事件",
				(CASE WHEN d.numbers IS NULL THEN 0 ELSE d.numbers END) AS "会议",
				(CASE WHEN a.numbers IS NULL THEN 0 ELSE a.numbers END)+
				(CASE WHEN b.numbers IS NULL THEN 0 ELSE b.numbers END)+
				(CASE WHEN c.numbers IS NULL THEN 0 ELSE c.numbers END)+
				(CASE WHEN d.numbers IS NULL THEN 0 ELSE d.numbers END) AS "合计",
				e.num AS "平均值",:users as member_id
				FROM(
				SELECT m.NAME AS NAME,u.NAME AS depName FROM org_member m INNER JOIN org_unit u ON m.ORG_DEPARTMENT_ID=u.ID WHERE m.ID=:users
				) m INNER JOIN
				(SELECT COUNT(*) AS numbers
				FROM plan_info p 
				WHERE p.STATUS!=1 AND p.plan_status!=4
				AND p.CREATE_USER_ID=:users
				AND ((p.START_TIME >= to_date(:startTime,'yyyy-mm-dd hh24:mi:ss') AND p.END_TIME < to_date(:endTime,'yyyy-mm-dd hh24:mi:ss')) 
				OR (p.START_TIME<=to_date(:startTime,'yyyy-mm-dd hh24:mi:ss') AND p.END_TIME>=to_date(:startTime,'yyyy-mm-dd hh24:mi:ss'))
				OR (p.START_TIME<to_date(:endTime,'yyyy-mm-dd hh24:mi:ss') AND p.END_TIME>=to_date(:endTime,'yyyy-mm-dd hh24:mi:ss')))
				) a	ON 1=1
				INNER JOIN(
				SELECT
				count(DISTINCT TI.id) AS numbers
				FROM task_info ti
				INNER JOIN task_role tr
				ON ti.id = tr.task_id
				WHERE tr.role_id = :users
				AND ti.status in (1,2,3,4)
				AND tr.role_type > 0
				AND ((ti.planned_start_time <= to_date(:startTime,'yyyy-mm-dd hh24:mi:ss') AND ti.planned_end_time >= to_date(:startTime,'yyyy-mm-dd hh24:mi:ss')) 
				OR (ti.planned_start_time >= to_date(:startTime,'yyyy-mm-dd hh24:mi:ss') AND ti.planned_end_time <= to_date(:endTime,'yyyy-mm-dd hh24:mi:ss')) 
				OR (ti.planned_start_time < to_date(:endTime,'yyyy-mm-dd hh24:mi:ss') AND ti.planned_end_time >= to_date(:endTime,'yyyy-mm-dd hh24:mi:ss')))
				) b ON 1=1
				INNER JOIN
				(SELECT
				COUNT(*) AS numbers
				FROM cal_event calEvent
				WHERE (calEvent.create_user_id = :users 
				or calEvent.RECEIVE_MEMBER_ID like CONCAT('%',CONCAT(:users,'%'))
				)
				AND ((calEvent.BEGIN_DATE <= to_date(:startTime,'yyyy-mm-dd hh24:mi:ss') AND calEvent.END_DATE >= to_date(:startTime,'yyyy-mm-dd hh24:mi:ss')) 
				OR (calEvent.BEGIN_DATE >= to_date(:startTime,'yyyy-mm-dd hh24:mi:ss') AND calEvent.END_DATE <= to_date(:endTime,'yyyy-mm-dd hh24:mi:ss'))
				OR (calEvent.BEGIN_DATE < to_date(:endTime,'yyyy-mm-dd hh24:mi:ss') AND calEvent.END_DATE >= to_date(:endTime,'yyyy-mm-dd hh24:mi:ss')))
				) c ON 1=1
				INNER JOIN
				(SELECT
				COUNT(*) AS numbers
				FROM ctp_affair a inner join meeting mt on mt.id=a.object_id
				WHERE a.APP = 6
				AND a.SUB_APP = 5 AND a.is_delete=0
				AND a.MEMBER_ID = :users
				AND (a.state = 3 OR a.state = 2 OR a.state=4 AND a.sub_state!=32)
				AND ((mt.BEGIN_DATE>=to_date(:startTime,'yyyy-mm-dd hh24:mi:ss') AND mt.END_DATE<=to_date(:endTime,'yyyy-mm-dd hh24:mi:ss'))  
				OR (mt.BEGIN_DATE<=to_date(:startTime,'yyyy-mm-dd hh24:mi:ss') AND mt.END_DATE>=to_date(:startTime,'yyyy-mm-dd hh24:mi:ss'))
				OR (mt.BEGIN_DATE<to_date(:endTime,'yyyy-mm-dd hh24:mi:ss') AND mt.END_DATE>=to_date(:endTime,'yyyy-mm-dd hh24:mi:ss')))
				) d ON 1=1
				INNER JOIN
				(select
				(case when sum(total)=0 or sum(total) is null then 0 else round(sum(total)/:departmentnum,2) end) as num 
				from rpt_event 
				where department_id=:departmentid and query_time>=to_date(:startTime, 'yyyy-mm-dd hh24:mi:ss') and query_time<=to_date(:endTime, 'yyyy-mm-dd hh24:mi:ss')
				) e ON 1=1
				]]>				
				</matterReport2>
				<matterReport3>
				<![CDATA[
				SELECT 
				m.id as id,m.org_Department_Id as orgdepartmentid,calEvent.begin_Date as starttime,calEvent.end_Date as endtime
				FROM Cal_Event as calEvent,Org_Member as m
				WHERE (calEvent.create_User_Id = m.id or calEvent.receive_Member_Id like CONCAT(CONCAT('%',cast(m.id as VARCHAR(32))),'%'))
				AND calEvent.begin_Date<:startTime AND calEvent.create_Date >= :startTime
				AND calEvent.create_Date <= :endTime 
				]]>
				</matterReport3>
				<avg>
				<![CDATA[
				select (case when sum(total)=0 or sum(total) is null then 0 else round(sum(total)/:departmentnum,2) end) as num from rpt_event where department_id=:departmentid and query_time>=to_date(:avgStart, 'yyyy-mm-dd hh24:mi:ss') and query_time<=to_date(:avgEnd, 'yyyy-mm-dd hh24:mi:ss')
				]]>
				</avg>
			</main>
		</EventStatistics>
		<WorkDailyStatistics>
			<main>
				<task>
					<sql1>
					<![CDATA[
					SELECT 
					a.name AS "管理范围", 
					cast('任务' AS VARCHAR(6)) AS "类型", 
					]]>
					</sql1>
					<type>
						<sql1>
						<![CDATA[
						cast('已完成' AS VARCHAR(9)) AS "状态",
						]]>
						</sql1>
						<sql2>
						<![CDATA[
						cast('进行中' AS VARCHAR(9)) AS "状态",
						]]>
						</sql2>
						<sql3>
						<![CDATA[
						cast('已延期' AS VARCHAR(9)) AS "状态",
						]]>
						</sql3>
						<sql4>
						<![CDATA[
						cast('未开始' AS VARCHAR(9)) AS "状态",
						]]>
						</sql4>
						<sql5>
						<![CDATA[
						cast('已取消' AS VARCHAR(9)) AS "状态",
						]]>
						</sql5>
						<sql6>
						<![CDATA[
						cast('已创建' AS VARCHAR(9)) AS "状态",
						]]>
						</sql6>
						<sql7>
						<![CDATA[
						cast('未完成' AS VARCHAR(9)) AS "状态",
						]]>
						</sql7>
					</type>
					<time1>
						<sql1>
						<![CDATA[
						cast('本日' AS VARCHAR(9)) AS "时间",
						]]>
						</sql1>
						<sql2>
						<![CDATA[
						cast('本周' AS VARCHAR(9)) AS "时间",
						]]>
						</sql2>
						<sql3>
						<![CDATA[
						cast('本月' AS VARCHAR(9)) AS "时间",
						]]>
						</sql3>
						<sql4>
						<![CDATA[
						cast('累积' AS VARCHAR(9)) AS "时间",
						]]>
						</sql4>
						<sql5>
						<![CDATA[
						cast('任意' AS VARCHAR(9)) AS "时间",
						]]>
						</sql5>
					</time1>
					<sql2>
					<![CDATA[
					(CASE WHEN b.total IS NULL THEN 0 ELSE b.total END) AS "数量",
					(CASE WHEN c.dep_sum is null THEN 0 ELSE ROUND(c.dep_sum) END) AS "平均数",
					'-' AS "超期数",
					'-' AS "超期百分比",
					a.member_id as member_id,:startTime as start_time,:endTime as end_time 
					FROM (
					(SELECT
					o.ID                AS member_id,
					o.NAME              AS NAME,
					o.ORG_DEPARTMENT_ID AS dep_id
					FROM org_member o
					WHERE o.ID in(:users)) a
					LEFT JOIN (
					SELECT
					tr.role_id AS member_id, 
					]]>
					</sql2>
					<time2>
						<sql1>
						<![CDATA[
						SUM(1) as total
						]]>
						</sql1>
						<sql2>
						<![CDATA[
						count(DISTINCT ti.id) AS total
						]]>
						</sql2>
					</time2>
					<sql3>
					<![CDATA[
					FROM task_info ti 
					INNER JOIN task_role tr 
					ON ti.id = tr.task_id 
					WHERE tr.role_id in(:users)
					]]>
					</sql3>
					<sql4>
						<type1>
						<![CDATA[
						AND ti.status=4 
						]]>
						</type1>
						<type2>
						<![CDATA[
						AND ti.status=2 
						]]>
						</type2>
						<type3>
						<![CDATA[
						AND ti.status=3 
						]]>
						</type3>
						<type4>
						<![CDATA[
						AND ti.status=1 
						]]>
						</type4>
						<type5>
						<![CDATA[
						AND ti.status=5 
						]]>
						</type5>
						<type6>
						<![CDATA[
						AND ti.status<5 
						]]>
						</type6>
						<type7>
						<![CDATA[
						AND ti.status in(1,2,3) 
						]]>
						</type7>
					</sql4>
					<sql5>
					<![CDATA[
					group by tr.role_id
					) b 
					ON a.member_id=b.member_id 
					LEFT JOIN 
					(SELECT 
						  middle.department_id AS dep_id, 
						  sum(middle.total) AS dep_sum 
						FROM rpt_task middle 
						WHERE middle.status=:avgStatus  AND (:time=3 OR (:time!=3
							AND to_date(:avgStart, 'yyyy-mm-dd hh24:mi:ss') <= middle.query_time 
					   		AND middle.QUERY_TIME < to_date(:avgEnd, 'yyyy-mm-dd hh24:mi:ss')))
					   	GROUP BY middle.DEPARTMENT_ID) c 
					   	ON a.dep_id=c.dep_id 
					) order by a.name
					]]>
					</sql5>
					<sql6>
					<![CDATA[
					AND ((ti.planned_start_time <= to_date(:startTime,'yyyy-mm-dd hh24:mi:ss') AND ti.planned_end_time >= to_date(:startTime,'yyyy-mm-dd hh24:mi:ss')) 
				OR (ti.planned_start_time >= to_date(:startTime,'yyyy-mm-dd hh24:mi:ss') AND ti.planned_end_time <= to_date(:endTime,'yyyy-mm-dd hh24:mi:ss')) 
				OR (ti.planned_start_time < to_date(:endTime,'yyyy-mm-dd hh24:mi:ss') AND ti.planned_end_time >= to_date(:endTime,'yyyy-mm-dd hh24:mi:ss')))
					]]>
					</sql6>
					<sql7>
					<![CDATA[
					FROM task_info ti 
					WHERE ti.create_user = :users
					]]>
					</sql7>
					<sql8>
					<![CDATA[
					AND ti.create_time >= to_date(:startTime,'yyyy-mm-dd hh24:mi:ss') AND ti.create_time <= to_date(:endTime,'yyyy-mm-dd hh24:mi:ss')
					]]>
					</sql8>
					<sql9>
					<![CDATA[
					AND tr.role_type > 0
					]]>
					</sql9>
					<sql10>
					<![CDATA[
					AND tr.role_type = 0
					]]>
					</sql10>
				</task>
			</main>
		</WorkDailyStatistics>
		<TaskBurndownStatistics>
			<main>
				<![CDATA[
				SELECT TMP."ID", TMP.TASK_NAME as "任务", TMP.START_TIME, TMP.PLAN_END, TMP.ACTUAL_END,
					TMP.END_TIME as "时间", count(TMP.COMPL_COUNT) as "完成任务数", TMP.TOTAL as "总数" 
				FROM(
					SELECT parent.id as id, parent.subject as task_name,trunc(parent.planned_start_time) as start_time, trunc(parent.planned_end_time) as plan_end,
					trunc(parent.actual_end_time) as actual_end, trunc(max(feed.create_time)) as end_time,
					1 as compl_count, 
					(SELECT count(*) FROM task_info where parent_task_id = :task_id) as total  
					FROM 
					task_info tinfo LEFT JOIN task_info parent ON tinfo.parent_task_id=parent.id
					LEFT JOIN task_feedback feed ON feed.task_id = tinfo.id
					WHERE tinfo.parent_task_id = :task_id AND tinfo.status in (4,5)
					GROUP BY TINFO."ID" ,trunc(feed.create_time),parent."ID", parent.SUBJECT,parent.PLANNED_START_TIME, parent.PLANNED_END_TIME,parent.ACTUAL_END_TIME
					) TMP
				GROUP BY TMP.END_TIME, TMP."ID", TMP.TASK_NAME, TMP.START_TIME, TMP.PLAN_END, TMP.ACTUAL_END, TMP.END_TIME, TMP.COMPL_COUNT,TMP.TOTAL
				ORDER BY TMP.END_TIME
				]]>
			</main>
		</TaskBurndownStatistics>
	</report>
</sqlcfg>