<?xml version="1.0" encoding="UTF-8"?>
<sqlcfg>
	<report>
		<LogOnTimes>
			<main>
				<subjectReport>
				<![CDATA[
				select sum(tmp.times_per_quantum) as times,tmp.logon_time as logon_time,tmp.quantum as time_quantum from( 
				select count(*) as times_per_quantum,TO_CHAR(logon_time,'yyyy-MM-dd') as logon_time,to_number(to_char(logon_time,'hh24')),                           
				case to_number(to_char(logon_time,'hh24'))                                                                   
				when 0  then 0                                                                          
				when 1  then 0                                                                          
				when 2  then 2                                                                          
				when 3  then 2                                                                          
				when 4  then 4                                                                          
				when 5  then 4                                                                          
				when 6  then 6                                                                          
				when 7  then 6                                                                          
				when 8  then 8                                                                          
				when 9  then 8                                                                          
				when 10  then 10                                                                        
				when 11  then 10                                                                        
				when 12  then 12                                                                        
				when 13  then 12                                                                        
				when 14  then 14                                                                        
				when 15  then 14                                                                        
				when 16  then 16                                                                        
				when 17  then 16                                                                        
				when 18  then 18                                                                        
				when 19  then 18                                                                        
				when 20  then 20                                                                        
				when 21  then 20                                                                        
				when 22  then 22                                                                        
				when 23  then 22                                                                        
				else -1                                                                                 
				end as quantum                                                                          
				FROM logon_log lg left join org_member mem on mem.id=lg.member_id                                                                          
				where TO_CHAR(logon_time,'yyyy-MM-dd')=:time and mem.status=1 and mem.is_admin=0 and mem.is_internal=1                                                          
				group by TO_CHAR(logon_time,'yyyy-MM-dd'),to_number(to_char(logon_time,'hh24'))                                              
				) tmp                                                                                   
				group by tmp.logon_time,tmp.quantum          
				]]>
				</subjectReport>
			</main>
		</LogOnTimes>
		<LogOnPersonNum>
			<main>
				<subjectReport>
				<![CDATA[
				select a.logontime as "日期",count(*)as "登录人数" from(                     
				select distinct mem.id,trunc(lg.logon_time) as logontime 
				from logon_log lg left join org_member mem on mem.id=lg.member_id           
				where mem.status=1 and mem.is_admin=0 and mem.is_internal=1  and lg.logon_time>=to_date(:start_day,'yyyy-MM-dd hh24:mi:ss') and trunc(lg.logon_time)<=to_date(:end_day,'yyyy-MM-dd hh24:mi:ss') 
				) a                    
				group by a.logontime order by a.logontime                                    		                             	
				]]>
				</subjectReport>
			</main>
		</LogOnPersonNum>
		<OnlinePeakByMonth>
			<main>
				<![CDATA[
				select max(peak_value) as max_peak,trunc(record_date) as record_date from rpt_online_peak 
				where record_date>=to_date(:start_day,'yyyy-MM-dd hh24:mi:ss') and record_date<=to_date(:end_day,'yyyy-MM-dd hh24:mi:ss')      
				group by trunc(record_date) order by record_date
				]]>
			</main>
		</OnlinePeakByMonth>
		<LogOutTimes>
			<main>
				<subjectReport>
				<![CDATA[
				select sum(tmp.times_per_quantum) as times,tmp.quantum as time_quantum from( 
				select count(*) as times_per_quantum,TO_CHAR(logout_time,'yyyy-MM-dd') as logout_time,to_number(to_char( logout_time,'hh24')),                          
				case to_number(to_char( logout_time,'hh24'))                                                                 
				when 0  then 0                                                                          
				when 1  then 0                                                                          
				when 2  then 2                                                                          
				when 3  then 2                                                                          
				when 4  then 4                                                                          
				when 5  then 4                                                                          
				when 6  then 6                                                                          
				when 7  then 6                                                                          
				when 8  then 8                                                                          
				when 9  then 8                                                                          
				when 10  then 10                                                                        
				when 11  then 10                                                                        
				when 12  then 12                                                                        
				when 13  then 12                                                                        
				when 14  then 14                                                                        
				when 15  then 14                                                                        
				when 16  then 16                                                                        
				when 17  then 16                                                                        
				when 18  then 18                                                                        
				when 19  then 18                                                                        
				when 20  then 20                                                                        
				when 21  then 20                                                                        
				when 22  then 22                                                                        
				when 23  then 22                                                                        
				else -1                                                                                 
				end as quantum                                                                          
				FROM logon_log lg left join org_member mem on mem.id=lg.member_id                                                                           
				where TO_CHAR(logout_time,'yyyy-MM-dd')=:time and mem.status=1 and mem.is_admin=0 and mem.is_internal=1                                                         
				group by TO_CHAR(logout_time,'yyyy-MM-dd'),to_number(to_char( logout_time,'hh24'))                                            
				) tmp                                                                                   
				group by tmp.logout_time,tmp.quantum                   
				]]>
				</subjectReport>
			</main>
		</LogOutTimes>
		<OnlineStatistics>
			<main>
				<subjectReport>
				<![CDATA[
				select trunc(rpt_online_peak."RECORD_DATE") as RECORD_DATE, rpt_online_peak."TIME_QUANTUM", max(rpt_online_peak."PEAK_VALUE") as PEAK_VALUE from rpt_online_peak 
				where trunc(record_date)=to_date(:time,'yyyy-MM-dd') 	  
				group by trunc(rpt_online_peak."RECORD_DATE"), rpt_online_peak."TIME_QUANTUM"  
				]]>
				</subjectReport>
			</main>
		</OnlineStatistics>
		<OnlineTimeStatistics>
			<main>
				<![CDATA[
					select mem.name as "人员",unit.name as "部门",a.ontime as "登录时间",a.outtime as "退出时间",a.on_line as "时长(小时)",
					0 as "部门平均时长(小时)",case a.logon_type when 0 then 'PC' else '移动端' end as "登录方式",a.ip_address as "登录IP" 
					from
						(
						select lg.member_id,
						"TO_NUMBER"(
							case when trunc(lg.logon_time)<trunc(lg.logout_time) then 
							"TO_CHAR"(ROUND(to_number(trunc(cast(lg.logon_time as date) + 1)-cast(lg.logon_time as date))*24*60))
							when lg.logout_time=lg.logon_time and TO_CHAR(logon_time,'yyyy-MM-dd hh24:mi:ss')>=(case when :loginDate='' then TO_CHAR(lg.logon_time,'yyyy-MM-dd hh24:mi:ss') else :loginDate end) then
							"TO_CHAR"(ROUND((to_date(:nowDate,'yyyy-mm-dd hh24-mi-ss')-cast(lg.logon_time as date))*24*60))
							else "TO_CHAR"(lg.online_time)                                                                                                           
							end
						) as on_line,                                                                                                                
						"TO_CHAR"(lg.logon_time,'yyyy-MM-dd hh24:mi:ss') as ontime,                                                                                                      
						(case when trunc(lg.logon_time)<trunc(lg.logout_time) or lg.logout_time=lg.logon_time then '-'                                                                 
						else "TO_CHAR"(lg.logout_time,'yyyy-MM-dd hh24:mi:ss')                                                                                                           
						end) as outtime,                                                                                                                
						lg.logon_type,
						lg.ip_address,
						LG.LOGON_TIME as logonTime                                                                                                  
						from logon_log lg                                                                                                             
						where lg.member_id=(:user_id) and 
						trunc(lg.logon_time) >= to_date(:start_time,'yyyy-MM-dd') and trunc(lg.logon_time) <= to_date(:end_time,'yyyy-MM-dd')                                                                                                                   
					                                                                                                                               
						union                                                                                                                          
						                                                                                                                               
						select lg.member_id,
						ROUND(to_number(cast(lg.logout_time as date)-trunc(lg.logout_time))*24*60) on_line,
						(case when trunc(lg.logon_time)<trunc(lg.logout_time) then '-'                                                                  
						else "TO_CHAR"(lg.logon_time,'yyyy-MM-dd hh24:mi:ss')                                                                                                            
						end) as ontime,                                                                                                             
						"TO_CHAR"(lg.logout_time,'yyyy-MM-dd hh24:mi:ss') as outtime,
						lg.logon_type,
						lg.ip_address,
						LG.LOGON_TIME as logonTime                                                                                  
						from logon_log lg                                                                                                             
						where trunc(lg.logon_time)<trunc(lg.logout_time) and lg.member_id=(:user_id) and 											
						trunc(lg.logon_time) >= to_date(:start_time,'yyyy-MM-dd') and trunc(lg.logon_time) <= to_date(:end_time,'yyyy-MM-dd') and lg.logout_time<=to_date(:end_time,'yyyy-MM-dd') 
						
						union
						
						select lg.member_id,
						ROUND(to_number(cast(lg.logout_time as date)-trunc(lg.logout_time))*24*60) as on_line,                                                                                                                
						'-' as ontime,                                                                                                      
						"TO_CHAR"(lg.logout_time,'yyyy-MM-dd hh24:mi:ss') as outtime,                                                                                                                
						lg.logon_type,
						lg.ip_address,
						LG.LOGON_TIME as logonTime                                                                                                  
						from logon_log lg                                                                                                             
						where trunc(lg.logon_time)<trunc(lg.logout_time) and lg.member_id=(:user_id) and                                                                                                 
						trunc(lg.logout_time) >= to_date(:start_time,'yyyy-MM-dd') and trunc(lg.logout_time) <= to_date(:end_time,'yyyy-MM-dd') and lg.logon_time<=to_date(:start_time,'yyyy-MM-dd')                                                                                                                  
					) a                                                                           											
					left join org_member mem on a.member_id=mem.id left join org_unit unit on unit.id=mem.org_department_id                        
					order by a.logonTime,a.outtime
				]]>
			</main>
			<depAverage>
				<![CDATA[
				SELECT
						sum(r.TOTAL) as total,
						r.DEPARTMENT_ID as department_id,
						r.QUERY_TIME as query_time,
						max(r.NAME) as name
				from (
						select 
						sum(
						case when trunc(lg.logon_time)<trunc(lg.logout_time) 
						then ROUND(to_number(trunc(lg.logon_time + 1)-lg.logon_time)*24*60)
						else lg.online_time end
						) as total,																									 
						u.id as department_id,u.name,
						trunc(lg.logon_time)  as query_time																								
						from logon_log lg left join org_member mem on mem.id=lg.member_id  																		
						left join org_unit u on u.id=mem.org_department_id                 																		
						where 
						u.id is not null and
						lg.logon_time > to_date(:start_time,'yyyy-MM-dd hh24:mi:ss') and lg.logon_time <= to_date(:end_time,'yyyy-MM-dd hh24:mi:ss')                                                                                                                       					
						group by u.id,u."NAME",trunc(lg.logon_time) 
						union
						select 
						sum(
						ROUND(to_number(lg.logout_time-trunc(lg.logout_time))*24*60)
						) as total,																									 
						u.id as department_id,u.name,
						trunc(lg.logout_time)  as query_time																								
						from logon_log lg left join org_member mem on mem.id=lg.member_id  																		
						left join org_unit u on u.id=mem.org_department_id                 																		
						where 
						u.id is not null and trunc(lg.logon_time)<trunc(lg.logout_time) and
						lg.logout_time > to_date(:start_time,'yyyy-MM-dd hh24:mi:ss') and lg.logout_time <= to_date(:end_time,'yyyy-MM-dd hh24:mi:ss')                                                                                                                       					
						group by u.id,u."NAME",trunc(lg.logout_time) 
				) r 
				GROUP BY
					r.DEPARTMENT_ID,
					r.QUERY_TIME
				]]>
			</depAverage>
			<rptOnlineTime>
				<![CDATA[
				select DEPARTMENT_ID, QUERY_TIME, AVERAGE from RPT_ONLINE_TIME 
				where DEPARTMENT_ID=:dep_id and 
				(case when 0=:time and QUERY_TIME >= to_date(:start_time,'yyyy-MM-dd') and QUERY_TIME < to_date(:end_time,'yyyy-MM-dd') then 1   										 
				when (1=:time or 2=:time or 4=:time or 5=:time) and QUERY_TIME >= to_date(:start_time,'yyyy-MM-dd') and QUERY_TIME <= to_date(:end_time,'yyyy-MM-dd') then 1
				else 0 
				end)=1
				]]>
			</rptOnlineTime>
		</OnlineTimeStatistics>
	</report>
</sqlcfg>